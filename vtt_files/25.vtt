WEBVTT

00:03.140 --> 00:08.160
Well, it's time for you to go out there and see the real world.

00:08.650 --> 00:14.640
But before you do that, let's review the concepts that we had, the important concept we had in the course.

00:14.960 --> 00:23.420
The final review includes the definition of a software development process, developing iteratively,

00:23.719 --> 00:30.609
the backlog technique, they user stories technique, the version control technique, the continuous

00:30.609 --> 00:34.310
integration techniques and test driven development.

00:34.460 --> 00:39.240
So, first of all, what is the definition of a software development process?

00:39.469 --> 00:44.920
It is a structure that is imposed on the development of a software product that

00:44.920 --> 00:54.450
produces great functional software, and it normally entails having the software product from the beginning

00:54.450 --> 01:03.659
to the end. It could be a software product that is used to sell at digital or a physical product online

01:03.670 --> 01:10.269
or software as a service that could also be related to this part.

01:10.340 --> 01:15.579
Then we have developing iteratively, which is working on many projects,

01:15.579 --> 01:22.560
many cycles. They're also called iterations, to promote customer feedback and

01:22.569 --> 01:27.829
deliver ability. This is something that is very important here is that you need

01:27.829 --> 01:35.569
to continue being in constant communication since from the inception to the release or tell you ship

01:35.579 --> 01:42.099
out your software. You need to continue being in constant communication with your customer from

01:42.099 --> 01:47.290
the beginning to the end of the process. Then the next concept is the backlog technique.

01:47.290 --> 01:52.780
Do you remember what a backlog is? Well, it's a big board in your office where you can track the

01:52.780 --> 01:58.290
progress of your user stories and tasks. Different people call the backlog different names.

01:58.299 --> 02:06.500
Sometimes people call it: the scrum Board or the spring dashboard or the big Board, so there are different

02:06.500 --> 02:12.419
names for the backlog. But what doesn't change is there are three task classes

02:12.419 --> 02:18.860
on the backlog: to do user stories or the pipeline,

02:19.110 --> 02:24.530
then you have the "doing" or "in progress" user stories, and then you have the "done" or

02:24.530 --> 02:29.889
"finished" user stories. Now lots of people like to include the burn down rate or

02:29.889 --> 02:37.199
the "calorie burning rate" on the backlog. Then we have the user stories technique.

02:37.199 --> 02:40.520
Do you remember what user stories are? Okay, a user story

02:40.520 --> 02:45.500
is the representation of on individual task the software has to do.

02:45.659 --> 02:52.120
It is composed of smaller tasks and It contains a title, a description, an estimate

02:52.129 --> 02:57.819
and our priority value. Remember that sometimes you have a user story that has only

02:57.819 --> 03:04.139
two or three individual tasks. But there are, like, really colossal user stories that

03:04.139 --> 03:10.069
may have hundreds of individual tasks before they are completed.

03:10.300 --> 03:13.000
Then we have the version control technique.

03:13.280 --> 03:20.699
VC or version control is a defensive tool. A multiple access repository that keeps track of the different

03:20.699 --> 03:28.430
versions of your code. Then we have the continuous integration technique that is a technique that guarantees

03:28.430 --> 03:34.629
the reduction of conflict impact by putting together a version control compilation

03:34.639 --> 03:42.319
and testing into a single repeatable process. Then you have test driven development, TDD as it is

03:42.319 --> 03:47.319
also known. It's all about writing tests before you even start writing

03:47.319 --> 03:52.020
the code that will give the software it's functionality and

03:52.020 --> 03:58.000
will allow you to have clear, solid, specific ideas about what your software needs

03:58.000 --> 04:02.219
to do. Well, from the bottom of my heart, I would like to say thank you.

04:02.219 --> 04:06.550
I hope you had as much fun taking this course as I did creating it.

04:06.870 --> 04:11.699
Remember to never stop learning. I hope to see you in a future course.

04:11.750 --> 04:17.920
If you need anything, you can contact me on Facebook or LinkedIn at Carlos Arriaga Luna, and

04:17.920 --> 04:26.220
remember to take your final exam. It is very important. I wish your success in your career and I hope to see you in a future course.